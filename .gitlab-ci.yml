# https://docs.gitlab.com/ee/ci/yaml/

image: docker:stable

stages:
  - build
  - tests
  - cleanup

variables:
  image_tag: latest


# check components build correctly
build_chat:
  stage: build
  script:
    - docker build -t interface/main:$image_tag ./chat-service

build_actions:
  stage: build
  script:
    - docker build -t action/server:$image_tag .

build_dissertation:
  stage: build
  script:
    - latexmk -pdf -cd docs/dissertation/dissertation.tex
  artifacts:
    paths:
      - "*.pdf"
  tags:
    - shell


# check for the responsive deployed prototype
test_prototype:
  stage: tests
  script:
    - python tests/test_prototype.py
  tags:
    - shell

# Testing the interface Features, make sure all chatbot's features are stable in the deployed version
# testBehave:
# stage:  tests
# script:
#   - PATH=$PATH:/home/ubuntu/Mohammed
#   - cd tests
#   - cd bdd
#   - pip install -r bdd_requirements.txt
#   - cd tests
#   - behave
# tags:
#   - shell

# Testing the components of the chatbot
unitTesting_elastic:
 stage: tests
 script:
   - cd tests/unit_testing
   - python3 elastic_runner.py
 tags:
   - shell

# clean up large dangling images from VM, if they exist
# this is only done on failure as removing it every time removes cache
# which is not good for build speeds
cleanup_build:
  stage: cleanup
  script:
    - docker images --no-trunc --all --quiet --filter="dangling=true" | xargs --no-run-if-empty docker rmi
    - docker system prune --force
  tags:
    - shell
  when: on_failure
